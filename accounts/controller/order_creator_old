# from wildRift.models import WildRiftDivisionOrder
# from valorant.models import ValorantDivisionOrder, ValorantPlacementOrder
# from pubg.models import PubgDivisionOrder
# from leagueOfLegends.models import LeagueOfLegendsDivisionOrder, LeagueOfLegendsPlacementOrder
# from tft.models import TFTDivisionOrder, TFTPlacementOrder
# from hearthstone.models import HearthstoneDivisionOrder
# from rocketLeague.models import RocketLeagueRankedOrder, RocketLeaguePlacementOrder, RocketLeagueSeasonalOrder, RocketLeagueTournamentOrder
# from mobileLegends.models import MobileLegendsDivisionOrder, MobileLegendsPlacementOrder
# from WorldOfWarcraft.models import WoWArenaBoostOrder
# from overwatch2.models import Overwatch2DivisionOrder
# from accounts.models import BaseUser, BaseOrder
# from django.contrib.contenttypes.models import ContentType
# from django.shortcuts import get_object_or_404


# def create_order(invoice, payer_id, customer, status='New',name = None):
#     # Split the invoice string by the hyphen ("-") delimiter
#     invoice_values = invoice.split('-')

#     # Extract specific values
#     game_id = int(invoice_values[1])
#     type = str(invoice_values[2])
#     booster_id = int(invoice_values[12])
#     extend_order_id = int(invoice_values[14])
#     price = float(invoice_values[13])
#     server = str(invoice_values[15])

#     if type == 'D' or type == 'A':
#         current_rank =  int(invoice_values[3])
#         current_division = int(invoice_values[4])
#         current_marks = int(invoice_values[5])
#         desired_rank = int(invoice_values[6])
#         desired_division = int(invoice_values[7])
#     elif type == 'P':
#         last_rank = int(invoice_values[3])
#         number_of_match = int(invoice_values[4])
#     elif type == 'S':
#         current_rank = int(invoice_values[3])
#         number_of_wins = int(invoice_values[4])
#     elif type == 'T':
#         current_league = int(invoice_values[3])

#     duo_boosting = bool(int(invoice_values[8]))
#     select_booster = bool(int(invoice_values[9]))
#     turbo_boost = bool(int(invoice_values[10]))
#     streaming = bool(int(invoice_values[11]))

#     # Wildrift
#     if game_id == 1:
#         booster_champions = bool(int(invoice_values[16]))
#         Game = WildRiftDivisionOrder 
#     # Volarent
#     elif game_id == 2:
#         # Extra Fields +
#         choose_agents = bool(int(invoice_values[16]))
#         if type == 'D':
#             Game = ValorantDivisionOrder
#         elif type == 'P':
#             Game = ValorantPlacementOrder
#     # Pubg
#     elif game_id == 3:
#         choose_agents = bool(int(invoice_values[16]))
#         Game = PubgDivisionOrder
#     # LOL
#     elif game_id == 4:
#         # Extra Fields +
#         print('Choose Champions: ', invoice_values[16])
#         choose_champions = bool(int(invoice_values[16]))
#         if type == 'D':
#             Game = LeagueOfLegendsDivisionOrder
#         elif type == 'P':
#             Game = LeagueOfLegendsPlacementOrder
#     # TFT
#     elif game_id == 5:
#          # Extra Fields +
#         speed_up_boost = bool(int(invoice_values[17]))
#         if type == 'D':
#             Game = TFTDivisionOrder
#         elif type == 'P':
#             Game = TFTPlacementOrder
#     # WoW
#     elif game_id == 6:
#          # Extra Fields +
#         choose_agents = bool(int(invoice_values[16]))
#         if type == 'A':
#             Game = WoWArenaBoostOrder
#         # if type == 'B'
        
#     # HEARTHSTONE
#     elif game_id == 7:
#          # Extra Fields +
#         choose_legends = bool(int(invoice_values[16]))
#         speed_up_boost = bool(int(invoice_values[17]))
#         Game = HearthstoneDivisionOrder

#     elif game_id == 8:
#         if type == 'D':
#             choose_champions = bool(int(invoice_values[16]))
#             Game = MobileLegendsDivisionOrder
#         elif type == 'p':
#             Game = MobileLegendsPlacementOrder


#     # Rocket League
#     elif game_id == 9:
#         if type == 'D':
#             ranked_type = int(invoice_values[15]) #check this value maybe not in the place correct TODO
#             Game = RocketLeagueRankedOrder
#         elif type == 'P':
#             Game = RocketLeaguePlacementOrder
#         elif type == 'S':
#             Game = RocketLeagueSeasonalOrder
#         elif type == 'T':
#             Game = RocketLeagueTournamentOrder   



#     # TODO sara kamal game id 10 dota2        
            
#     # TODO sarah mohamed game id 11 Honer Of King        


#     # overwatch2
#     elif game_id == 12 :
#         if type == 'D':
#             Game = Overwatch2DivisionOrder


#     # TODO cs go2 game here and last game        
#     elif game_id == 13:
#         Game = 'anoter model' # for future work #
#     else:
#         pass

#     try:
#         booster = BaseUser.objects.get(id=booster_id, is_booster=True)
#     except BaseUser.DoesNotExist:
#         booster = None

#     try:
#         if status != 'Continue':
#             extend_order = BaseOrder.objects.get(id=extend_order_id)
#             extend_order.is_done = True
#             extend_order.is_extended = True
#             extend_order.money_owed = 0
#             extend_order.status = 'Extend'
#             extend_order.save()
#             status = 'Extend'
            
#             extend_order_money_owed = extend_order.money_owed
#             extend_order_price = extend_order.price
#             order_name = extend_order.name
#             extend_order_booster = extend_order.booster
#             extend_order_customer = extend_order.customer
#             extend_order_customer_gamename = extend_order.customer_gamename
#             extend_order_customer_password = extend_order.customer_password
#             extend_order_server = extend_order.customer_server
#             extend_order_data_correct = extend_order.data_correct

#             extend_order_game = Game.objects.get(order = extend_order)
#             extend_order_game_reached_rank = extend_order_game.reached_rank
#             extend_order_game_reached_division = extend_order_game.reached_division
#             if game_id != 9:
#                 extend_order_game_reached_marks = extend_order_game.reached_marks

#     except BaseOrder.DoesNotExist:
#         extend_order = None
#     if status == 'New' or status == 'Continue':
#         baseOrder = BaseOrder.objects.create(invoice=invoice, booster=booster, payer_id=payer_id, customer=customer,status=status, price=price, duo_boosting=duo_boosting,select_booster=select_booster,turbo_boost=turbo_boost,streaming=streaming, name=name, customer_server=server)
#         # Wildrift Without Placement 
#         if game_id == 1:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, booster_champions=booster_champions)
#         # Valorant - Division
#         elif game_id == 2 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, choose_agents=choose_agents)
#         # Valorant - Placement
#         elif game_id == 2 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_agents=choose_agents)
#         # Pubg Without Placement 
#         elif game_id == 3:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks, desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division, reached_marks=current_marks, choose_agents=choose_agents)
#         # LOL - Division
#         elif game_id == 4 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, choose_champions=choose_champions)
#         # LOL - Placement
#         elif game_id == 4 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_champions=choose_champions)
#         # TFT - Division
#         elif game_id == 5 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, speed_up_boost=speed_up_boost)
#         # TFT - Placement
#         elif game_id == 5 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,speed_up_boost=speed_up_boost)
#         # WoW - Arena
#         elif game_id == 6 and type == 'A':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,choose_agents=choose_agents)
#         # HEARTHSTONE
#         elif game_id == 7:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, choose_legends=choose_legends,speed_up_boost=speed_up_boost)
#         # Mobile Legends - Division
#         elif game_id == 8 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks, choose_champions=choose_champions)
#         # Mobile Legends - Placement
#         elif game_id == 8 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_champions=choose_champions)
#         # Rocket League - Division
#         elif game_id == 9 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, desired_rank_id=desired_rank, desired_division=desired_division, reached_rank_id=current_rank, reached_division=current_division, ranked_type=ranked_type)
#         # Rocket League - Placement
#         elif game_id == 9 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=last_rank,number_of_match=number_of_match)
#         # Rocket League - Seasonal
#         elif game_id == 9 and type == 'S':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,number_of_wins=number_of_wins)
#         # Rocket League - Tournament
#         elif game_id == 9 and type == 'T':
#             order = Game.objects.create(order=baseOrder,current_league_id=current_league)
#         # TODO sara kamal Doat2          ########
#         if game_id == 10:
#             pass
#         #TODO sarah mohamed Honer Of King #########
#         if game_id == 11:
#             pass
#         # Overwatch Division 
#         if game_id == 12:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank_id=current_rank, reached_division=current_division,reached_marks=current_marks)
#         # csgo2
#         if game_id == 13:
#             pass


#     elif status == 'Extend':
#         print(f"order extended from:  {order_name}")
#         baseOrder = BaseOrder.objects.create(invoice=invoice, booster=extend_order_booster,duo_boosting=duo_boosting, select_booster=select_booster, turbo_boost=turbo_boost,streaming=streaming, customer=extend_order_customer,payer_id=payer_id, customer_gamename=extend_order_customer_gamename, customer_password=extend_order_customer_password, customer_server=extend_order_server,name = order_name, money_owed =extend_order_money_owed, price = price + extend_order_price, data_correct = extend_order_data_correct, status = "Extend")

#         # Wildrift Without Placement 
#         if game_id == 1:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, booster_champions=booster_champions)
#         # Valorant - Division
#         elif game_id == 2 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, choose_agents=choose_agents)
#         # Valorant - Placement
#         elif game_id == 2 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_agents=choose_agents)       
#         # Pubg Without Placement 
#         elif game_id == 3:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, choose_agents=choose_agents)
#         # LOL - Division
#         elif game_id == 4 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, choose_champions=choose_champions)
#         # LOL - Placement
#         elif game_id == 4 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_champions=choose_champions)
#         # TFT - Division
#         elif game_id == 5 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, speed_up_boost=speed_up_boost)
#         # TFT - Placement
#         elif game_id == 5 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,speed_up_boost=speed_up_boost)
#         # WoW
#         elif game_id == 6 and type == 'A':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, choose_agents=choose_agents)
#         # HEARTHSTONE
#         elif game_id == 7:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks,choose_legends=choose_legends, speed_up_boost=speed_up_boost)
#         # Mobile Legends
#         elif game_id == 8 and type == 'D': 
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks, choose_champions=choose_champions)

#         elif game_id == 8 and type == 'P': 
#              order = Game.objects.create(order=baseOrder,last_rank_id=(last_rank + 1),number_of_match=number_of_match,choose_champions=choose_champions)

#         # Rocket League - Division
#         elif game_id == 9 and type == 'D':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, desired_rank_id=desired_rank, desired_division=desired_division, reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, ranked_type=ranked_type)
#         # Rocket League - Placement
#         elif game_id == 9 and type == 'P':
#             order = Game.objects.create(order=baseOrder,last_rank_id=last_rank,number_of_match=number_of_match)
#         # Rocket League - Seasonal
#         elif game_id == 9 and type == 'S':
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,number_of_wins=number_of_wins)
#         # Rocket League - Tournament
#         elif game_id == 9 and type == 'T':
#             order = Game.objects.create(order=baseOrder,current_league_id=current_league)
#         # TODO sara kamal Doat2      TODO       ########
#         if game_id == 10:
#             pass
#         #TODO sarah mohamed Honer Of King      TODO      #########
#         if game_id == 11:
#             pass
#         # Overwatch Division 
#         if game_id == 12:
#             order = Game.objects.create(order=baseOrder,current_rank_id=current_rank,current_division=current_division, current_marks=current_marks,desired_rank_id=desired_rank, desired_division=desired_division,reached_rank=extend_order_game_reached_rank, reached_division=extend_order_game_reached_division, reached_marks=extend_order_game_reached_marks)
#         # csgo2
#         if game_id == 13:
#             pass
#     content_type = ContentType.objects.get_for_model(order)
#     baseOrder.content_type = content_type
#     baseOrder.object_id = order.pk
#     order.save_with_processing()
#     baseOrder.customer_wallet()
#     return order

