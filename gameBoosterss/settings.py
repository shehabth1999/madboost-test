from decouple import config 
import os

"""
Django settings for gameBoosterss project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

AUTH_USER_MODEL = 'accounts.BaseUser'

ASGI_APPLICATION = 'gameBoosterss.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# Application definition
INSTALLED_APPS = [
    'daphne',
    'channels',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # My Apps
    'booster.apps.BoosterConfig',
    'customer.apps.CustomerConfig',
    'dashboard.apps.DashboardConfig',
    'wildRift.apps.WildriftConfig',
    'valorant.apps.ValorantConfig',
    'pubg.apps.PubgConfig',
    'tft.apps.TftConfig',
    'hearthstone.apps.HearthstoneConfig',
    'WorldOfWarcraft.apps.WorldofwarcraftConfig',
    'leagueOfLegends.apps.LeagueoflegendsConfig',
    'rocketLeague.apps.RocketleagueConfig',
    'django_cleanup.apps.CleanupConfig',
    'accounts.apps.AccountsConfig',
    'mobileLegends.apps.MobilelegendsConfig',
    'honorOfKings.apps.HonorofkingsConfig',
    'dota2.apps.Dota2Config',
    'overwatch2.apps.Overwatch2Config',
    'csgo2.apps.Csgo2Config',
    
    # Games
    'games.apps.GamesConfig',

    # Others
    'paypal.standard.ipn',
    'corsheaders',
    'rest_framework',
    'django_q',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'gameBoosterss.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/"templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gameBoosterss.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": 'sukamedn',
        "USER": 'sukamedn',
        "PASSWORD": 'g1_kuhJc0yL69XWj9VIQFrgYmwfCuvQB',
        "HOST": "flora.db.elephantsql.com",
        "PORT": "5432",
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Directory where static files will be collected during deployment
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


# to send email via gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_USE_SSL = False
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

AUTH_USER_MODEL = 'accounts.BaseUser'

ALLOWED_HOSTS = ['*','.vercel.app']


PAYPAL_EMAIL='sb-blcbf28542348@business.example.com'
PAYPAL_TEST = True
PAYPAL_VERIFY_URL = 'https://www.sandbox.paypal.com/cgi-bin/webscr'


Q_CLUSTER = {
    'name': 'gameBoosterss',
    'workers': 10,
    'recycle': 500,
    'timeout': 1960,
    'retry': 2000,
    'queue_limit': 50,
    'bulk': 10,
    'orm': 'default',
    'sync': False,
    'cleanup': 500, 
}

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'root': {
#         'handlers': ['console'],
#         'level': 'DEBUG',  # Set to 'DEBUG' for more detailed logs
#     },
#     'loggers': {
#         'django_q': {
#             'handlers': ['console'],
#             'level': 'DEBUG',  # Set to 'DEBUG' for more detailed logs
#             'propagate': True,
#         },
#     },
# }